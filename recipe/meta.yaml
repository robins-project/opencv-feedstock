{% set version = "3.4.3" %}

package:
  name: opencv
  version: {{ version }}

source:
  - url: https://github.com/opencv/opencv/archive/{{ version }}.tar.gz
    fn: opencv-{{ version }}.tar.gz
    sha256: 4eef85759d5450b183459ff216b4c0fa43e87a4f6aa92c8af649f89336f002ec
    patches:
      # https://github.com/opencv/opencv/pull/12465
      - 12465-bayer2rgba.patch
      # https://github.com/opencv/opencv/pull/12515
      - 12515-bayer2rgba_pattern.patch
  - url: https://github.com/opencv/opencv_contrib/archive/{{ version }}.tar.gz
    fn: opencv_contrib-{{ version }}.tar.gz
    sha256: 6dfb51326f3dfeb659128df952edecd45683626a965aa4a8e1e9c970c40fb636
    folder: opencv_contrib

build:
  number: 0
  features:
    - feature_cuda_{{ cuda_impl }}
    - feature_blas_{{ blas_impl }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    # Required to find ffpmeg
    - pkg-config                   # [not win]
    - cmake
    - ninja
    - patch
  host:
    - python
    - numpy
    - hdf5
    - eigen 3.2.*
    - jasper # [unix]
    # - openjpeg
    - zlib
    - jpeg
    - libtiff
    - libwebp
    - harfbuzz # [unix]
    - libpng
    - {{ blas_impl }}-devel
    - ffmpeg # [not win]
    - qt
    # - protobuf
    - tbb
    - glog
    # - gflags

  run:
    - python
    # - {{ pin_compatible('numpy') }}
    - numpy
    - hdf5
    - eigen 3.2.*
    - jasper # [unix]
    # - openjpeg
    - zlib
    - jpeg
    - libwebp
    - harfbuzz # [unix]
    - libtiff
    - libpng
    - {{ blas_impl }}-devel
    - ffmpeg # [not win]
    - qt
    # - protobuf
    - tbb
    - glog
    # - gflags
    - feature_blas {{ feature_blas }} {{ blas_impl }}
    - feature_cuda {{ feature_cuda }} {{ cuda_impl }}

test:
    requires:
      - {{ compiler("c") }}
      - {{ compiler("cxx") }}
      - requests
      - certifi
    files:
      - test.cc
    imports:
      - cv2
      - cv2.xfeatures2d

    commands:
        # Verify dynamic libraries on all systems
        {% set win_ver_lib = version|replace(".", "") %}
        {% set opencv_libs = [
            "aruco",
            "bgsegm",
            "calib3d",
            "ccalib",
            "core",
            "cudaarithm", # [cuda_impl == 'cuda']
            "cudabgsegm", # [cuda_impl == 'cuda']
            "cudacodec", # [cuda_impl == 'cuda']
            "cudafeatures2d", # [cuda_impl == 'cuda']
            "cudafilters", # [cuda_impl == 'cuda']
            "cudaimgproc", # [cuda_impl == 'cuda']
            "cudalegacy", # [cuda_impl == 'cuda']
            "cudaobjdetect", # [cuda_impl == 'cuda']]
            "cudaoptflow", # [cuda_impl == 'cuda']
            "cudastereo", # [cuda_impl == 'cuda']
            "cudawarping", # [cuda_impl == 'cuda']
            "cudev", # [cuda_impl == 'cuda']
            "cvv",
            "datasets",
            "dnn",
            "dnn_objdetect",
            "dpm",
            "face",
            "features2d",
            "flann",
            "fuzzy",
            "hfs",
            "highgui",
            "img_hash",
            "imgcodecs",
            "imgproc",
            "line_descriptor",
            "ml",
            "objdetect",
            "optflow",
            "phase_unwrapping",
            "photo",
            "plot",
            "reg",
            "rgbd",
            "saliency",
            "shape",
            "stereo",
            "stitching",
            "structured_light",
            "superres",
            "surface_matching",
            "text",
            "tracking",
            "video",
            "videoio",
            "videostab",
            "xfeatures2d",
            "ximgproc",
            "xobjdetect",
            "xphoto"
        ] %}
        {% for each_opencv_lib in opencv_libs %}
        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}${SHLIB_EXT}                               # [unix]
        - if not exist %PREFIX%\\Library\\bin\\opencv_{{ each_opencv_lib }}{{ win_ver_lib }}.dll exit 1 # [win]
        {% endfor %}

about:
  home: http://opencv.org/
  license: BSD 3-clause
  summary: Computer vision and machine learning software library.
  license_file: LICENSE

extra:
  recipe-maintainers:
    - v-turin
